from time import strftime
timestr = strftime('%Y%m%d-%H%M%S')

#fractals 2

newPage()
#page 1

w = h = 100

def tree(n):
   oval(0, 0, w, h)

   if n > 0:
       save()
       translate(0, h)
       rotate(90)
       scale(sqrt(2)/2)
       tree(n-1)
       restore()

       save()
       translate(w, h)
       rotate(-90)
       scale(sqrt(2)/2)
       translate(-w, 0)
       tree(n-1)
       restore()

levels = 3
translate(width()/2 - w/2, height()/2 - h/2 - 50)
tree(levels)

# saveImage('fractals-2-1-' + timestr + '.jpg')


newPage()
#page 2

w = h = 100

def tree(n):
   oval(0, 0, w, h)

   if n > 0:
       save()
       translate(0, h)
       rotate(90)
       scale(sqrt(2)/2)
       tree(n-1)
       restore()

       save()
       translate(w, h)
       rotate(-90)
       scale(sqrt(2)/2)
       translate(-w, 0)
       tree(n-1)
       restore()

levels = 3
translate(width()/2 - w/2, height()/2 - h/2 + 50)
tree(levels)


q = 90

def tree2(n):
   oval(0, 0, w, h)

   if n > 0:
       save()
       translate(0, h)
       rotate(q)
       scale(sqrt(2)/2)
       tree2(n-1)
       restore()

       save()
       translate(w, h)
       rotate(-q)
       scale(sqrt(2)/2)
       translate(-w, 0)
       tree2(n-1)
       restore()

translate(0, - 300) # (0, -205) is nice
tree2(levels)

# saveImage('fractals-2-2-' + timestr + '.jpg')

newPage()
# page 3

w = h = 100
levels = 5 #more levels, more balls, duh

def tree2(n):
   oval(0, 0, w, h)

   if n > 0:
       save()
       translate(0, h)
       rotate(-10) #
       scale(sqrt(2)/2)
       tree2(n-1)
       restore()

translate(width()/2 - w/2, height()/2 - h/2 - 50)
tree2(levels)

# saveImage('fractals-2-3-' + timestr + '.jpg')

newPage()
# page 4

#W = H = 700
w = h = 100
#size(W, H)

def tree(n):
   oval(0, 0, w, h)

   if n > 0:
       save()
       translate(0, h)
       rotate(45)
       scale(sqrt(2)/2)
       tree(n-1)
       restore()

       save()
       translate(0, h)
       rotate(90)
       scale(sqrt(2)/2)
       tree(n-1)
       restore()

       save()
       translate(0, h)
       rotate(135)
       scale(sqrt(2)/2)
       tree(n-1)
       restore()

       save()
       translate(0, h)
       rotate(180)
       scale(sqrt(2)/2)
       tree(n-1)
       restore()

       save()
       translate(w, h)
       rotate(-45)
       scale(sqrt(2)/2)
       translate(-w, 0)
       tree(n-1)
       restore()

       save()
       translate(0, h)
       rotate(-90)
       scale(sqrt(2)/2)
       tree(n-1)
       restore()

       save()
       translate(0, h)
       rotate(-135)
       scale(sqrt(2)/2)
       tree(n-1)
       restore()

levels = 3

translate(width()/2 - w/2, 100)
tree(levels)

# saveImage('fractals-2-4-' + timestr + '.jpg')

newPage()
#page 5

w = h = 100
levels = 150 #more levels, more balls, duh
snapniet = 0.99

def tree(n):
   oval(0,0, w, h)

   if n > 0:
       save()
       translate(0, h * snapniet)
       rotate(-5) #dit is de hoek
       scale(sqrt(2)/1.74) #bepaaltverkleining diameter
       tree(n-1)
       restore()

translate(500,500)
tree(levels)

# saveImage('fractals-2-5-' + timestr + '.jpg')

